{
  "openapi" : "3.0.1",
  "info": {
    "title": "TOTP Server API",
    "description": "# TOTP-Server \r\n A Server implementing time based one time PINs (TOTP's) as described in [RFC 6238](https://tools.ietf.org/html/rfc6238). It can be integrated into Authentication Server with some minor adjustments, or deployed as a standalone service using QA-Appbase or any fully certified JEE 7+ server. \r\n  \r\n ### Management and Provisioning Operations\r\n  \r\n The management REST interface allows administrators to  \r\n * create device aliases, \r\n * lock and unlock devices,  \r\n * create additional administrator devices, and \r\n * deactivate devices \r\n  \r\n ### The API \r\n  \r\n The API is divided into four Operations: \r\n  \r\n 1. Provisioning Operations - operations used during device provisioning\r\n 2. Security Operations - operations for authentication and authorization\r\n 3. Management Operations - operations for device management\r\n 4. Report Operations - operations for retrieving reports\r\n  \r\n ###### API flow for Provisioning \r\n  \r\n A call is made to the [/provision](#/Provisioning%20Operations/provision) endpoint to create a device. The ProvisioningResponse returned will contain the secret seed and the initial counter for the device. The secret seed is a Hex-Encoded String of the secret seed bytes. \r\n A call is made to the [/activate](#/Provisioning%20Operations/activate) endpoint with the first generated token. Once the token is verified, the device will be activated, and can be used for authentication. \r\n The [/sync](#/Provisioning%20Operations/synchronize) endpoint can be used to verify that the device time is in sync with the server time, ensuring that TOTP tokens will match, as long as all other parameters are equal. \r\n  \r\n ###### API flow for Management Operations \r\n  \r\n All Management Operations need at least one authorization to execute. The first authorization is a Json Web Token (JWT). This is an encrypted token generated by calling the [/login](#/Security%20Operations/login) endpoint with the device ID or alias of an administrator device and a generated TOTP token. The token is valid for a system defined amount of time (see _JWTLoginModule_ settings for more information), and so will not be required for every call. GUI developers can store this token upon initial login and use it to call Management Operations that don't require a second authorization.  \r\n  \r\n API endpoints that use the ManagementRequest object in their POST parameters are required to contain a second authorization. The alias or device ID of a second administrator device must be passed along with a generated token for the device in the AuthenticationRequest field.",
    "contact": {
      "name": "Kwaku Twumasi-Afriyie",
      "email": "kwaku.twumasi@quakearts.com"
    },
    "license": {
      "name": "MIT License https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "tags": [
    {
      "name": "Provisioning Operations",
      "description": "These operations create a device for authentication"
    },
    {
      "name": "Security Operations",
      "description": "These operations retrieve security tokens for authorizing restricted operations"
    },
    {
      "name": "Management Operations",
      "description": "These operations manage the devices on the TOTP server"
    },
    {
      "name": "Report Operations",
      "description": "These operations fetch Device Reports"
    }
  ],
  "paths" : {
    "/authenticate" : {
      "post" : {
        "tags": [
          "Security Operations"
        ],
        "operationId" : "authenticate",
        "summary": "Verify a user using the device TOTP code ",
        "description":"Verify/authenticate a user using the TOTP code generated by the specified device",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthenticationRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Login is successful"
          },
          "403" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
        },
        "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
        },
        "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/authenticate/device/{deviceId}" : {
      "get" : {
        "tags": [
          "Security Operations"
        ],
        "operationId" : "authenticateDirect",
        "summary": "Authenticate a user by connecting directly to the device",
        "description":"Verify/authenticate a user by connecting directly to the device and requesting the TOTP code",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/management-login" : {
      "post" : {
        "tags": [
          "Security Operations"
        ],
        "operationId" : "login",
        "summary": "Generate a JWT for authorizing management requests",
        "description":"Every request to modify a device requires two authorizations. This is the first. A JWT must be sent for all Management Operations. All POST operations require a second authorization: the device ID and OTP token for a second administrator. The administrator that generates this JWT cannot be the same as the administrator that provides the second authorization",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthenticationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Login is successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
        },
        "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
        },
        "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/manage/lock" : {
      "post" : {
        "tags": [
          "Management Operations"
        ],
        "security": [
          {
            "totp-login": []
          }
        ],
        "operationId" : "lock",
        "summary": "Lock a set of devices",
        "description":"Lock a set of devices, to prevent them from being used for authentication. Note: the 'alias' field of the ManagementRequest is not required, and should be left empty, or not passed at all",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The operation has been received and processed. The result of each operation on each of the devices is returned in the order in which the devices were submitted",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagementResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/manage/unlock" : {
      "post" : {
        "tags": [
          "Management Operations"
        ],
        "security": [
          {
            "totp-login": []
          }
        ],
        "operationId" : "unlock",
        "summary": "Lock a set of devices",
        "description":"Unlock a set of devices, that were previously locked either by the system or by an administrator. Note: the 'alias' field of the ManagementRequest is not required, and should be left empty, or not passed at all",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The operation has been received and processed. The result of each operation on each of the devices is returned in the order in which the devices were submitted",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagementResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/manage/count-devices" : {
      "get" : {
        "tags": [
          "Report Operations"
        ],
        "security": [
          {
            "totp-login": []
          }
        ],
        "operationId" : "countDevices",
        "summary": "Return a count of all devices on the server",
        "description":"Return a count of all devices. This includes devices that have been provisioned, but not activated",
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountResponse"
                }
              }
            },
            "403" : {
              "description" : "Authentication failed",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "400" : {
              "description" : "Data source error",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500" : {
              "description" : "General internal server error",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/manage/deactivate" : {
      "post" : {
        "tags": [
          "Management Operations"
        ],
        "security": [
          {
            "totp-login": []
          }
        ],
        "operationId" : "deactivate",
        "summary": "Permanently deactivate a set of devices",
        "description":"Deactivate a device permanently. The device will be kept in the database for historical purposes. To temporarily prevent a device from usage, lock the device instead. Note: the 'alias' field of the ManagementRequest is not required, and should be left empty, or not passed at all",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The operation has been received and processed. The result of each operation on each of the devices is returned in the order in which the devices were submitted",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagementResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/manage/unassign-alias" : {
      "post" : {
        "tags": [
          "Management Operations"
        ],
        "security": [
          {
            "totp-login": []
          }
        ],
        "operationId" : "unassignAliases",
        "summary": "Unassign aliases from devices",
        "description":"Remove aliases that were previously assigned to devices. Note: the 'deviceId' field of the ManagementRequest is not required, and should be left empty, or not passed at all",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The operation has been received and processed. The result of each operation on each of the devices is returned in the order in which the devices were submitted",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagementResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/manage/assign-alias" : {
      "post" : {
        "tags": [
          "Management Operations"
        ],
        "security": [
          {
            "totp-login": []
          }
        ],
        "operationId" : "assignAliases",
        "summary": "Assign aliases to devices",
        "description":"Assign aliases to devices. The alias can be used in place of the device id during authentication. Note: both the 'alias' and the 'deviceId' fields of the ManagementRequest are required.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The operation has been received and processed. The result of each operation on each of the devices is returned in the order in which the devices were submitted",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagementResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/manage/add-as-admin" : {
      "post" : {
        "tags": [
          "Management Operations"
        ],
        "security": [
          {
            "totp-login": []
          }
        ],
        "operationId" : "addAsAdmin",
        "summary": "Add a set of devices as administrators",
        "description":"Add a set of devices to the list of device administrators. Note: both the 'alias' and the 'deviceId' fields of the ManagementRequest are required. The alias here refers to the name of the person assigned the device. It is not required to be unique, and can be as descriptive as possible.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The operation has been received and processed. The result of each operation on each of the devices is returned in the order in which the devices were submitted",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagementResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/manage/remove-as-admin" : {
      "post" : {
        "tags": [
          "Management Operations"
        ],
        "security": [
          {
            "totp-login": []
          }
        ],
        "operationId" : "removeAsAdmin",
        "summary": "Remove a set of devices from the list of administrators",
        "description":"This operation prevents a device from operating as an administrator. Note: the 'alias' field of the ManagementRequest is not required, and should be left empty, or not passed at all",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagementRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The operation has been received and processed. The result of each operation on each of the devices is returned in the order in which the devices were submitted",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagementResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/manage/get-devices" : {
      "get" : {
        "tags": [
          "Report Operations"
        ],
        "security": [
          {
            "totp-login": []
          }
        ],
        "operationId" : "getDevices",
        "summary": "Get device Id and status information on the devices in the system",
        "description":"This operation provides information such as device ID and status. This operation can be used to get the neccessary information to auto-complete device selection during management operations in GUI. The lastid field can be used for paging. It is set to the last id passed from a previous call. It defaults to 0. The max rows limits the results returned. It can also be used for paging",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "INITIATED", "ACTIVE", "INACTIVE", "LOCKED" ]
          }
        }, {
          "name" : "lastid",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "maxrows",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/manage/list-administrators" : {
      "get" : {
        "tags": [
          "Report Operations"
        ],
        "security": [
          {
            "totp-login": []
          }
        ],
        "operationId" : "listAdministrators",
        "summary": "List the set of administrator devices",
        "description":"List all devices that have been setup as administrators, along with the name assigned to them",
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AdministratorResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Authentication failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/provisioning/{deviceid}" : {
      "put" : {
        "tags": [
          "Provisioning Operations"
        ],
        "operationId" : "activate",
        "summary": "Activate a previously provisioned device.",
        "description":"This is the last step of device provisioning and is required to activate the device for authentication.",
        "parameters" : [ {
          "name" : "deviceid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivationRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Provisioning is successful response",
            "content" : {
              "*/*" : { }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags": [
          "Provisioning Operations"
        ],
        "operationId" : "provision",
        "summary": "Provision a new device.",
        "description":"This is the first step of device provisioning. A cryptographic seed and an inital counter will be generated and returned. The two peices of information, along with the previously (offline) shared time step and HMAC algorithm are used to generate TOTP tokens to authenticate the device and by extension its user.",
        "parameters" : [ {
          "name" : "deviceid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sync" : {
      "get" : {
        "tags": [
          "Provisioning Operations"
        ],
        "operationId" : "synchronize",
        "summary": "Get the current epoch milliseconds on the server",
        "description":"This operation allows devices to compare their internal clock times with that of the server. If the clocks are off by more than a predetermined maximum delay (taking into account network latency), the internal clock can be synchronized by using the device specific API's. It is important that the time synchronization server used for the device be the same as that of the server. The TOTP server has a grace period parameter. This setting makes it possible to set an appropriate interval to allow for unsynchronized devices and network latency",
        "responses" : {
          "200" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncResponse"
                }
              }
            },
            "500" : {
              "description" : "General internal server error",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/request/verify/signature/{signature}/device/{deviceId}" : {
      "get" : {
        "tags": [
          "Security Operations"
        ],
        "operationId" : "verifySignedRequest",
        "summary": "Verify a signature.",
        "description":"Verify that a JWT was signed by the specified device.",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "signature",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Provisioning is successful response",
            "content" : {
              "*/*" : { }
            }
          },
          "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/request/sign/device/{deviceId}" : {
      "post" : {
        "tags": [
          "Security Operations"
        ],
        "operationId" : "signRequest",
        "summary": "Generate a signature.",
        "description":"Generate a JWT was signed by the specified device.",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Request was signed by the device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Request map is required",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
        },
        "417" : {
            "description" : "There was an error processing the request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
        },
        "400" : {
            "description" : "Data source error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
        },
        "500" : {
            "description" : "General internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "TokenResponse" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          }
        }
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          }
        }
      },
      "AuthenticationRequest" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string"
          },
          "otp" : {
            "type" : "string"
          }
        }
      },
      "ManagementResponse" : {
        "type" : "object",
        "properties" : {
          "response" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DeviceRequest" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string"
          },
          "alias" : {
            "type" : "string"
          }
        }
      },
      "ManagementRequest" : {
        "type" : "object",
        "properties" : {
          "requests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceRequest"
            }
          },
          "authorizationRequest" : {
            "$ref" : "#/components/schemas/AuthenticationRequest"
          }
        }
      },
      "CountResponse" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "DeviceResponse" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INITIATED", "ACTIVE", "INACTIVE", "LOCKED" ]
          },
          "itemCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "AdministratorResponse" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string"
          },
          "commonName" : {
            "type" : "string"
          }
        }
      },
      "ActivationRequest" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "alias" : {
            "type" : "string"
          }
        }
      },
      "ProvisioningResponse" : {
        "type" : "object",
        "properties" : {
          "seed" : {
            "type" : "string"
          },
          "initialCounter" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "SyncResponse" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      }
    },
    "securitySchemes": {
      "totp-login": {
        "type": "http",
        "description": "A JWT bearer obtained from the TOTP Server",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
